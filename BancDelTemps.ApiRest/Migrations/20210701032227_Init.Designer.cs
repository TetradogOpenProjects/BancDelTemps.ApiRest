// <auto-generated />
using System;
using BancDelTemps.ApiRest;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BancDelTemps.ApiRest.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20210701032227_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("BancDelTemps.ApiRest.Models.Permiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Nombre" }, "NombrePermiso_uniqueContraint")
                        .IsUnique();

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("BancDelTemps.ApiRest.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("EndHolidays")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IdExterno")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("StartHolidays")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("ValidatorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ValidatorId");

                    b.HasIndex(new[] { "Email" }, "Email_uniqueContraint")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BancDelTemps.ApiRest.Models.UserPermiso", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("PermisoId")
                        .HasColumnType("int");

                    b.Property<int>("GrantedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("GrantedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("RevokedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RevokedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("UserId", "PermisoId");

                    b.HasIndex("GrantedById");

                    b.HasIndex("PermisoId");

                    b.HasIndex("RevokedById");

                    b.ToTable("PermisosUsuarios");
                });

            modelBuilder.Entity("BancDelTemps.ApiRest.Models.User", b =>
                {
                    b.HasOne("BancDelTemps.ApiRest.Models.User", "Validator")
                        .WithMany("Validated")
                        .HasForeignKey("ValidatorId");

                    b.Navigation("Validator");
                });

            modelBuilder.Entity("BancDelTemps.ApiRest.Models.UserPermiso", b =>
                {
                    b.HasOne("BancDelTemps.ApiRest.Models.User", "GrantedBy")
                        .WithMany("Granted")
                        .HasForeignKey("GrantedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BancDelTemps.ApiRest.Models.Permiso", "Permiso")
                        .WithMany("Users")
                        .HasForeignKey("PermisoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BancDelTemps.ApiRest.Models.User", "RevokedBy")
                        .WithMany("Revoked")
                        .HasForeignKey("RevokedById");

                    b.HasOne("BancDelTemps.ApiRest.Models.User", "User")
                        .WithMany("Permisos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GrantedBy");

                    b.Navigation("Permiso");

                    b.Navigation("RevokedBy");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BancDelTemps.ApiRest.Models.Permiso", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("BancDelTemps.ApiRest.Models.User", b =>
                {
                    b.Navigation("Granted");

                    b.Navigation("Permisos");

                    b.Navigation("Revoked");

                    b.Navigation("Validated");
                });
#pragma warning restore 612, 618
        }
    }
}
