// <auto-generated />
using System;
using BancDelTemps.ApiRest;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BancDelTemps.ApiRest.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220405172641_AddParamsUser")]
    partial class AddParamsUser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BancDelTemps.ApiRest.Models.Gift", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("TransaccionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TransaccionId");

                    b.ToTable("Gifts");
                });

            modelBuilder.Entity("BancDelTemps.ApiRest.Models.Operacion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<bool>("Completada")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsValid")
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("RevisorId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RevisorId");

                    b.HasIndex("UserId");

                    b.ToTable("Operaciones");
                });

            modelBuilder.Entity("BancDelTemps.ApiRest.Models.Permiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Nombre" }, "NombrePermiso_uniqueContraint")
                        .IsUnique();

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("BancDelTemps.ApiRest.Models.Transaccion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Minutos")
                        .HasColumnType("int");

                    b.Property<long>("OperacionId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserFromId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserToId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UserValidatorId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OperacionId");

                    b.HasIndex("UserFromId");

                    b.HasIndex("UserToId");

                    b.HasIndex("UserValidatorId");

                    b.ToTable("Transacciones");
                });

            modelBuilder.Entity("BancDelTemps.ApiRest.Models.TransaccionDelegada", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Fin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("OperacionId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OperacionId");

                    b.HasIndex("UserId");

                    b.ToTable("TransaccionesDelegadas");
                });

            modelBuilder.Entity("BancDelTemps.ApiRest.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("varchar(320)");

                    b.Property<DateTime?>("EndHolidays")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IdExterno")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("StartHolidays")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<bool>("ValidatedRegister")
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("ValidatorId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ValidatorId");

                    b.HasIndex(new[] { "Email" }, "Email_uniqueContraint")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BancDelTemps.ApiRest.Models.UserPermiso", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<int>("PermisoId")
                        .HasColumnType("int");

                    b.Property<long>("GrantedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("GrantedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("RevokedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("RevokedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("UserId", "PermisoId");

                    b.HasIndex("GrantedById");

                    b.HasIndex("PermisoId");

                    b.HasIndex("RevokedById");

                    b.ToTable("PermisosUsuarios");
                });

            modelBuilder.Entity("BancDelTemps.ApiRest.Models.Gift", b =>
                {
                    b.HasOne("BancDelTemps.ApiRest.Models.Transaccion", "Transaccion")
                        .WithMany()
                        .HasForeignKey("TransaccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transaccion");
                });

            modelBuilder.Entity("BancDelTemps.ApiRest.Models.Operacion", b =>
                {
                    b.HasOne("BancDelTemps.ApiRest.Models.User", "Revisor")
                        .WithMany("OpereacionesRevisadas")
                        .HasForeignKey("RevisorId");

                    b.HasOne("BancDelTemps.ApiRest.Models.User", "User")
                        .WithMany("OperacionesHechas")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Revisor");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BancDelTemps.ApiRest.Models.Transaccion", b =>
                {
                    b.HasOne("BancDelTemps.ApiRest.Models.Operacion", "Operacion")
                        .WithMany()
                        .HasForeignKey("OperacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BancDelTemps.ApiRest.Models.User", "UserFrom")
                        .WithMany("TransaccionesFrom")
                        .HasForeignKey("UserFromId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BancDelTemps.ApiRest.Models.User", "UserTo")
                        .WithMany("TransaccionesIn")
                        .HasForeignKey("UserToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BancDelTemps.ApiRest.Models.User", "UserValidator")
                        .WithMany("TransaccionesValidator")
                        .HasForeignKey("UserValidatorId");

                    b.Navigation("Operacion");

                    b.Navigation("UserFrom");

                    b.Navigation("UserTo");

                    b.Navigation("UserValidator");
                });

            modelBuilder.Entity("BancDelTemps.ApiRest.Models.TransaccionDelegada", b =>
                {
                    b.HasOne("BancDelTemps.ApiRest.Models.Operacion", "Operacion")
                        .WithMany()
                        .HasForeignKey("OperacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BancDelTemps.ApiRest.Models.User", "User")
                        .WithMany("TransaccionesSigned")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operacion");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BancDelTemps.ApiRest.Models.User", b =>
                {
                    b.HasOne("BancDelTemps.ApiRest.Models.User", "Validator")
                        .WithMany("Validated")
                        .HasForeignKey("ValidatorId");

                    b.Navigation("Validator");
                });

            modelBuilder.Entity("BancDelTemps.ApiRest.Models.UserPermiso", b =>
                {
                    b.HasOne("BancDelTemps.ApiRest.Models.User", "GrantedBy")
                        .WithMany("Granted")
                        .HasForeignKey("GrantedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BancDelTemps.ApiRest.Models.Permiso", "Permiso")
                        .WithMany("Users")
                        .HasForeignKey("PermisoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BancDelTemps.ApiRest.Models.User", "RevokedBy")
                        .WithMany("Revoked")
                        .HasForeignKey("RevokedById");

                    b.HasOne("BancDelTemps.ApiRest.Models.User", "User")
                        .WithMany("Permisos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GrantedBy");

                    b.Navigation("Permiso");

                    b.Navigation("RevokedBy");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BancDelTemps.ApiRest.Models.Permiso", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("BancDelTemps.ApiRest.Models.User", b =>
                {
                    b.Navigation("Granted");

                    b.Navigation("OperacionesHechas");

                    b.Navigation("OpereacionesRevisadas");

                    b.Navigation("Permisos");

                    b.Navigation("Revoked");

                    b.Navigation("TransaccionesFrom");

                    b.Navigation("TransaccionesIn");

                    b.Navigation("TransaccionesSigned");

                    b.Navigation("TransaccionesValidator");

                    b.Navigation("Validated");
                });
#pragma warning restore 612, 618
        }
    }
}
